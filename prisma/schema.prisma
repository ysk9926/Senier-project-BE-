// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String 
  userId String @unique
  avatar String? 
  todos   Todo[]
  memos   Memo[]
  points Int @default(100)
  admin  Boolean @default(false)
  userWhiteNoises UserWhiteNoise[]
  inquiries Inquiry[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Todo {
  id Int @id @default(autoincrement())
  status Boolean @default(false)
  content String
  user User @relation(fields: [userId], references: [id])
  userId  Int
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Memo{
 id Int @id @default(autoincrement())
 content String
  user User @relation(fields: [userId], references: [id])
  userId  Int
 createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model WhiteNoise {
  id            Int             @id @default(autoincrement())
  whitenoiseName String         @unique
  whitenoiseURL  String
  backgroundImgURL String
  requirePoints Int?
  userWhiteNoises UserWhiteNoise[]
  createAt      DateTime        @default(now())
  updateAt      DateTime        @updatedAt
}

model UserWhiteNoise {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  whiteNoise    WhiteNoise @relation(fields: [whiteNoiseId], references: [id])
  whiteNoiseId  Int
  isLocked      Boolean
  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model BackgroundMusic {
  id            Int      @id @default(autoincrement())
  bgMusicName String @unique
  bgMusicURL  String
  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model Inquiry{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userID], references: [id])
  userID Int
  title String 
  contents String
  answer String?
  isClosed Boolean @default(false)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}